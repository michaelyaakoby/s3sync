Using boto
==========
insatll boto:
-------------
curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
python get-pip.py
pip install boto3

send SNS:
---------
mkdir ~/.aws
echo "[default]" > ~/.aws/config
echo "region=us-west-2" >> ~/.aws/config

from python:
- - - - - - - 
import boto3

snsClient = boto3.client('sns')
client.publish(TopicArn='arn:aws:sns:us-west-2:464262061435:copy1', Subject='kuki', Message='Puki')

send CFN update:
----------------

cfnClient = boto3.client('cloudformation')
cfnClient.signal_resource(
    StackName='michael',
    LogicalResourceId='AgentInstance',
    UniqueId='i-f669d22c',
    Status='SUCCESS'
)

If I could describe the instance...
- - - - - - - - - - - - - - - - - -
instance = client.describe_instances(InstanceIds=['i-f669d22c'])
subnetId = instance['Reservations'][0]['Instances'][0]['SubnetId']
vpcId = instance['Reservations'][0]['Instances'][0]['VpcId']

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

XCP
====
mkdir /catalog
echo "/catalog localhost(rw,no_root_squash,async)" > /etc/exports
systemctl enable rpcbind
systemctl start rpcbind
systemctl enable nfs.service
systemctl start nfs.service

yum install -y lrzsz
tar xzvf xcp-*.tgz
ln -s `pwd`/xcp-*/linux/xcp /usr/bin/xcp
cp xcp-license.xwic /opt/NetApp/xFiles/xcp/license

xcp activate
sed -i 's/^catalog.*/catalog = localhost:\/catalog/' /opt/NetApp/xFiles/xcp/xcp.ini

xcp copy localhost:/var s3:/ontap-sync/var

xcp copy -newid data1 localhost:/home/ec2-user/data/ s3:/ontap-sync/data
xcp sync -id data1

-=-=-=-=-=-=-=-=
echo "/ localhost(ro,no_root_squash,async)" >> /etc/exports
exportfs -a
xcp copy -newid etc1 localhost:/etc s3://ontap-sync/etc

base64 /dev/urandom | head -c 1000000000 > 1g.dat
-=-=-=-=-=-=-=-=

/opt/NetApp/s3sync/agent/scripts/copy-to-s3.py  -s nfs://10.60.18.45/data -t s3://ontap-sync/data/ -c kukipuki -n arn:aws:sns:us-west-2:464262061435:copy1 

Using s3utils
=============
The hard way
------------
http://s3tools.org/repositories

yum -y install lrzsz
yum -y install unzip
yum -y install nfs-utils

rz //to transfer s3cmd filr
unzip s3cmd-master.zip 

mount 10.60.18.45:/data /data -o nolock

cd s3cmd-master
./s3cmd --configure
./s3cmd sync /data s3://ontap-sync/data/

Automated
---------
curl -L https://github.com/s3tools/s3cmd/releases/download/v1.6.0/s3cmd-1.6.0.tar.gz -o s3cmd-1.6.0.tar.gz
tar xvzf s3cmd-1.6.0.tar.gz
ln -s `pwd`/s3cmd-1.6.0/s3cmd /usr/bin/s3cmd

yum -y install nfs-utils

mount 10.60.18.45:/data /data -o nolock
s3cmd --access_key=AKIAJXUNTVUCJ46FQBRQ --secret_key=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 --region=us-west-2 sync /data s3://ontap-sync/data/
umount /data


Using SSM
==========
Installing (RHEL us-west-2)
---------------------------
mkdir /tmp/ssm
curl https://amazon-ssm-us-west-2.s3.amazonaws.com/latest/linux_amd64/amazon-ssm-agent.rpm -o /tmp/ssm/amazon-ssm-agent.rpm
yum install -y /tmp/ssm/amazon-ssm-agent.rpm
systemctl start amazon-ssm-agent


Using S3FS (bad idea...)
========================

Install FUSE
----------
yum install -y gcc libstdc++-devel gcc-c++ curl-devel libxml2-devel openssl-devel mailcap
yum install -y fuse-libs
cd /usr/src/
wget http://downloads.sourceforge.net/project/fuse/fuse-2.X/2.9.3/fuse-2.9.3.tar.gz
tar xzf fuse-2.9.3.tar.gz
cd fuse-2.9.3
./configure --prefix=/usr/local
make && make install
export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig
Ldconfig
modprobe fuse
 
Install S3FS
----------
cd /usr/src/
wget https://s3fs.googlecode.com/files/s3fs-1.74.tar.gz
tar xzf s3fs-1.74.tar.gz
cd s3fs-1.74
./configure --prefix=/usr/local
make && make install
echo AKIAJXUNTVUCJ46FQBRQ:kp/F22zkZtxyCmbcU0TUb/3pItJJtJLSmiKHEjrU > ~/.passwd-s3fs
chmod 600 ~/.passwd-s3fs

Mount S3
----------
mkdir /tmp/cache
mkdir /s3mnt
chmod 777 /tmp/cache /s3mnt
s3fs -o use_cache=/tmp/cache ontap-sync /s3mnt

Bla Bla Bla
============
easy_install + aws-cfn
----------------------
curl https://bootstrap.pypa.io/ez_setup.py | python
easy_install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz